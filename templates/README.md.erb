<!--
CONTRIBUTOR; WARNING
This file is generated by the /update-documentation.rb script. 
Don't edit it directly.

@see /update-documentation.rb
@see /templates/README.md.erb
-->

[![Docker Hub](https://img.shields.io/docker/cloud/build/eaudeweb/scratch?label=Docker%20Hub&style=flat)](https://hub.docker.com/u/decidim)

<p align="center">
  <h1 align="center"><img width="400" src="https://cdn.rawgit.com/decidim/decidim/develop/logo.svg" alt="Decidim"></h1>
  <h2 align="center">The participatory democracy framework</h2>
  <p align="center">Free Open-Source participatory democracy, citizen participation and open government for cities and organizations. <a href="https://docs.decidim.org/"><br>Explore the docs ¬ª</a></p>
  <p align="center">Join our <a href="http://chat.decidim.org">Matrix.org chat rooms</a>.</p>
  <p align="center">
    <a href="https://decidim.org/features">Features</a> ¬∑
    <a href="https://github.com/decidim/decidim/projects/16">Roadmap</a> ¬∑
    <a href="https://github.com/decidim/docker/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc+label%3A%22type%3A+bug%22">Decidim on Docker: Report Bug</a> ¬∑
    <a href="https://meta.decidim.org/processes/roadmap">Propose New Features</a> ¬∑
    <a href="https://github.com/decidim/decidim">Decidim main repository</a></p>
</p>

<!-- START doctoc generated TOC please keep comment here to allow auto update -->
<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->


<!-- END doctoc generated TOC please keep comment here to allow auto update -->

---

# Dockerhub

**Stable tags**

<%= stable_images.join(",") %>


**Development tags**

<%= dev_images.join(",") %>

# [‚ñ∂Ô∏è 5min tutorial](./docs/5min-tutorial.md)
Ready to mount a Decidim installation locally in 5min?
[Follow our 5min tutorial](./docs/5min-tutorial.md) to setup Decidim with Docker locally.

## Eject you decidim instance
You want to publish your instance on a git? 
You can copy all files of your decidim container in your local environment with `docker cp`

```bash
docker-compose up -d
docker cp decidim:/home/decidim/app ready-to-publish # Wait the command finishes!
cd ready-to-publish && git init
# Follow your git client instructions to upload this repo to github
```

Once ejected, you will have a Dockerfile and docker-compose ready to use on your ejected application. 

## Environments configurations
>  üîê: be sure to read the [good practices](#good-practices) ;)

| Env Name | Description | Default |
|---|---|---|
| DECIDIM_SYSTEM_EMAIL | Email use to access /system | `hello@myorg.com` |
| DECIDIM_SYSTEM_PASSWORD | Password use to access /system | `youReallyWantToChangeMe` |
| RUN_PUMA | If the container should run rails | `1` |
| RUN_SIDEKIQ | If the container should run sidekiq | `1` |
| RUN_CRON | If the container should run cron | `1` |
| SECRET_KEY_BASE | üîê Secret used to initialize application's key generator | `youReallyWantToChangeMe` |
| RAILS_MASTER_KEY | üîê Used to decrypt credentials file | `youReallyWantToChangeMe` |
| RAILS_FORCE_SSL | If rails should force SSL | `false` |
| RAILS_MAX_THREADS | How many threads rails can use | `5` |
| RAILS_SERVE_STATIC_FILES | If rails should be accountable to serve assets | `false` |
| RAILS_ASSET_HOST | If set, define the assets are loaded from (S3?) | `` |
| SIDEKIQ_CONCURRENCY | Concurrency for sidekiq worker. MUST be <= DATABASE_MAX_POOL_SIZE | `RAILS_MAX_THREADS` |
| DATABASE_MAX_POOL_SIZE | Max pool size for the database. | `RAILS_MAX_THREADS` |
| DATABASE_URL | Host for the postgres database. | `pg` |
| TZ | Timezone used | `Europe/Madrid` |
| REDIS_UR | Redis url for sidekiq | `redis` |
| SMTP_AUTHENTICATION | How rails should authenticate to SMTP | `plain`, `none` |
| SMTP_USERNAME | Username for SMTP | `my-participatory-plateform@iredmail.org` |
| SMTP_PASSWORD | üîê Password for SMTP | `youReallyWantToChangeMe` |
| SMTP_ADDRESS | SMTP address | smtp.iredmail.org |
| SMTP_DOMAIN | SMTP [HELO Domain](https://www.ibm.com/docs/en/zos/2.2.0?topic=sc-helo-command-identify-domain-name-sending-host-smtp) | `iredmail` |
| SMTP_PORT | SMTP address port | `587` |
| SMTP_STARTTLS_AUTO | If TLS should start automatically | `enabled` |
| SMTP_VERIFY_MODE | How smtp certificates are verified | `none` |

Almost all the `DECIDIM_` variables are available. [See the documentation on default environments variables](https://github.com/decidim/decidim/blob/v0.27.0/docs/modules/configure/pages/environment_variables.adoc).


## Unsupported Environments

| Env name | Why it is NOT supported |
|---|---|
| RAILS_LOG_TO_STDOUT | We use `supervisord` process manager that will create/rotates logfiles for you. `RAILS_LOG_TO_STDOUT` will have no effect. |


## Cron configurations
Cron is configured to run scripts every 15min, 1hour, daily, weekly, monthly. 
When the times comes, it will execute all scripts present in the `/etc/periodic` directory. 
[By default](./bundle/crontab.d), the following scripts are executed:

```sh
‚îú‚îÄ‚îÄ 15min
‚îÇ   ‚îî‚îÄ‚îÄ change_active_steps.sh
‚îú‚îÄ‚îÄ daily
‚îÇ   ‚îú‚îÄ‚îÄ daily_digest.sh
‚îÇ   ‚îú‚îÄ‚îÄ open_data_export.sh
‚îÇ   ‚îî‚îÄ‚îÄ reminders_all.sh
‚îú‚îÄ‚îÄ hourly
‚îÇ   ‚îú‚îÄ‚îÄ compute_metrics.sh
‚îÇ   ‚îî‚îÄ‚îÄ delete_download_your_data_files.sh
‚îú‚îÄ‚îÄ monthly
‚îî‚îÄ‚îÄ weekly
    ‚îú‚îÄ‚îÄ clean_registration_forms.sh
    ‚îî‚îÄ‚îÄ weekly_digest.sh
```

To configure this, you can copy this `cron.d` directory, change the scripts and map a volume. 
Carefull, these scripts need permission to be executed, don't forget to `chmod +x` any new scripts.

```
# Copy the container directory locally
docker cp decidim:/etc/periodic crontab.d
```

And update your docker-compose: 
```diff
    container_name: decidim
    image: decidim/decidim:latest
    ports:
      - 3000:3000
    volumes:
      - storage:/home/decidim/app/storage
+     - ./crontab.d:/etc/periodic
+   environment:
-   environment:    
```

> The environment variable `DECIDIM_RUN_CRON` (`1` or `0`) define if your container will run cron or not. 
> Thus, you have a fine-grained control over your containers. `cron` is handled by supervisord and is running in __forground__ when `1`

## Extend Decidim Images
Let say you want to use official image, but a binary is missing. For the sake of the example, let's add `restic` a binary to manage encrypted backups. 
```
# Your new custom image
FROM decidim:<%= last_stable %>
RUN apk --update --no-cache restic
# You are done, restic is now available in your image.
```

## Run Decidim in development/test mode
The docker-compose `development.NAME_YOUR_VERSION.yml` allows you to run decidim in `development` or `test` mode. 
They are larger images, and are not suited for production usage. 


## Contribute
See [CONTRIBUTING.md](./CONTRIBUTING.md) for more informations.
[PR are Welcome](./CONTRIBUTING.md) ‚ù§Ô∏è 

## License
This repository is under [GNU AFFERO GENERAL PUBLIC LICENSE, V3](./LICENSE).
